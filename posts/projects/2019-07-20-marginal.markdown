---
title: 'Marginal: the Whitespace Interpreter'
---

[`Marginal`](https://github.com/jhmcstanton/marginal) is a
[Whitespace language](https://hackage.haskell.org/package/whitespace-0.4/src/docs/tutorial.html) interpreter implemented in Haskell. For those unfamiliar with 
it, Whitespace is an esoteric programming language that only uses the tokens
`" "`, `"\t"`, and `"\n"`. This project is just an excuse to refresh on same lexing
& parsing basics, as well as playing with some interesting Haskell features.

`Marginal` is largely implemented as a library, with a thin CLI wrapper around
it. At the time of writing `Marginal` contains 2 parser implementatons (one
using just [`Alex`](https://www.haskell.org/alex/), and the other using
a more appropriate `Alex` and [`Happy`](https://www.haskell.org/happy/)
combination), and a single _strict_ VM implementation. Assuming my own interest
remains I plan on adding another parser implementation, probably with
[`Megaparsec`](http://hackage.haskell.org/package/megaparsec), as well as
a debugger implementation for the strict VM implementation and implementations
that use the default lazy evaluation strategy (but not making whitespace 
itself lazy).
